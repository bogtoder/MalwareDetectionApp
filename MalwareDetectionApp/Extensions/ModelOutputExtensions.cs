using MalwareDetectionApp.DTOs;
using MalwareDetectionApp.DTOs.Enums;
using System.Collections.Generic;
using System.Linq;

namespace MalwareDetectionApp.Extensions
{
    public static class ModelOutputExtensions
    {
        public static IEnumerable<(MalwareType Malware, float Confidence)> Detections(this ModelOutput output)
        {
            var benignConfidence = output.Prediction[(int)MalwareType.None];

            if(benignConfidence >= 0.70f)
            {
                return new List<(MalwareType, float)> { (MalwareType.None, benignConfidence) };
            }

            var topPredictions = output.Prediction
                .Where((p, index) => index != 9)
                .Select((confidence, index) => new { confidence, index })
                .OrderByDescending(x => x.confidence)
                .Take(3)
                .Select(x => ((MalwareType)x.index, x.confidence));



            return topPredictions.Sum(x => x.confidence) >= 0.35f
                ? topPredictions
                : new List<(MalwareType, float)> 
                { 
                    (MalwareType.None, benignConfidence) 
                };
        }
    }
}
