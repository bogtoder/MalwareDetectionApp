using System;
using System.IO;
using System.Linq;

namespace MalwareDetectionApp.Services
{
    public static class FeaturesService
    {
        public static float[]? GetByteFreqsAndEntropy(string filePath)
        {
            var byteHistogram = GetFileByteHistogram(filePath);

            if (!byteHistogram.Any(count => count != 0))
            { 
                return null;
            }

            var totalBytes = byteHistogram.Sum(count => count);
            var byteProbs = byteHistogram.Select(count => count / totalBytes);

            var entropy = -1 * byteProbs.Where(prob => prob > 0).Sum(prob => prob * Math.Log2(prob));
            var normalized_entropy = (float)(entropy / 8);

            return byteProbs.Append(normalized_entropy).ToArray();
        }

        private static float[] GetFileByteHistogram(string filePath)
        {
            var bytehistogram = new float[256];

            var byteContents = File.ReadAllBytes(filePath);

            foreach(var fileByte in byteContents) 
            {
                bytehistogram[fileByte] += 1;
            }

            return bytehistogram;
        }
    }
}
